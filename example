#tensorflow的名字由来，在整个的tensorflow框架中，节点被称为nodes，用于实际的数学计算，节点之间连接的线则表示在节点间相互联系的多维数据数组, 即张量【数据】（tensor)
#训练模型时tensor会不断的从数据流图中的一个节点flow到另一节点, 这就是TensorFlow名字的由来.

#Tensorflow 是非常重视结构的, 我们得建立好了神经网络的结构, 才能将数字放进去, 运行这个结构.Tensorflow 首先要定义神经网络的结构, 然后再把数据放入结构当中去运算和 training

import tensorflow as tf
import numpy as np
#创建数据
x_data=np.random.rand(100).astype(np.float32)
y_data=x_data*0.1+0.3

#搭建模型（参考为y=weights*x+biases)
weights=tf.Variable(tf.random_uniform([1],-0.1,1.0))
biases=tf.Variable(tf.zeros([1]))
y=weights*x_data+biases

#计算误差
loss=tf.reduce_mean(tf.square(y-y_data))

#误差计算出来干什么呢？进行传递，从而使得计算机能够自己修正参数
optimizer=tf.train.GradientDescentOptimizer(0.5)#实例化一个优化函数
train=optimizer.minimize(loss)

#到目前为止, 我们只是建立了神经网络的结构, 还没有使用这个结构. 在使用这个结构之前, 我们必须先初始化所有之前定义的Variable, 所以这一步是很重要的!
init=tf.global_variables_initializer()
#接着,我们再创建会话 Session，我们用 Session 来执行 init 初始化步骤. 并且, 用 Session 来 run 每一次 training 的数据. 逐步提升神经网络的预测准确性.
init=tf.global_variables_initializer()

Sess=tf.Session()
Sess.run(init)

for i in range(201):
    Sess.run(train)
    if i %20==0:
        print(i,Sess.run(weights),Sess.run(biases))
